{"version":3,"sources":["logo.jpg","assets/resume.pdf","App/NavBar/AnimatedLogo/AnimatedLogo.tsx","App/NavBar/NavItems/NavItems.tsx","App/NavBar/NavBar.tsx","App/ScrollToTop/ScrollToTop.tsx","App/Splash/Splash.tsx","App/AboutMe/AboutMe.tsx","App/Knowledge/Knowledge.tsx","App/Experiences/Experiences.tsx","App/ContactMe/ContactMe.tsx","App/Footer/Footer.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AnimatedLogo","src","logo","className","alt","Component","ScrollLink","Scroll","Link","NavItems","to","spy","smooth","duration","offset","role","aria-label","NavBar","Splash","href","ResumePath","target","rel","AboutMe","Knowledge","fs","languages","technologies","ml","map","language","technology","Experiences","ContactMe","name","method","action","type","placeholder","value","Footer","App","state","hasScrolled","checkScroll","window","scrollY","setState","document","addEventListener","this","removeEventListener","id","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe4c6545.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2f67d006.jpg\";","module.exports = __webpack_public_path__ + \"static/media/resume.fe5e6b8d.pdf\";","import React, { Component } from 'react';\nimport './AnimatedLogo.scss'\n\nimport logo from '../../../logo.jpg';\n\nclass AnimatedLogo extends Component {\n    render () {\n        return (\n            <div>\n                <img src={logo} className=\"logo\" alt=\"logo\" />\n            </div>\n        );\n    }\n}\n\nexport default AnimatedLogo;","import React, { FC } from 'react';\nimport Scroll from 'react-scroll';\n\nimport './NavItems.scss';\n\nconst ScrollLink = Scroll.Link;\n\nconst NavItems: FC = () => {\n    return (\n        <div className=\"navbar-end nav-items\">\n            <ScrollLink \n                to=\"my-story\" \n                spy={true} \n                smooth={true} \n                duration={500} \n                className=\"navbar-item\"\n                offset={-200}\n                // activeClass='some-active-class'\n            >\n                My Story\n            </ScrollLink>  \n            <ScrollLink \n                to=\"expertise\" \n                spy={true} \n                smooth={true} \n                duration={500}\n                offset={-200} \n                className=\"navbar-item\"\n            >\n                Expertise\n            </ScrollLink> \n            <ScrollLink \n                to=\"past-experience\" \n                spy={true} \n                smooth={true} \n                duration={500}\n                offset={-200} \n                className=\"navbar-item\"\n            >\n                Past Experiences\n            </ScrollLink> \n            <ScrollLink \n                to=\"contact-me\" \n                spy={true} \n                smooth={true} \n                duration={500}\n                offset={-200} \n                className=\"navbar-item contact-button button is-primary\"\n            >\n                Say Hello &nbsp;<span role=\"img\" aria-label=\"wave\">üëãüèΩ</span>\n            </ScrollLink>\n        </div>\n    )\n};\n\nexport default NavItems;","import React, { FC } from 'react';\n\nimport AnimatedLogo from './AnimatedLogo/AnimatedLogo';\nimport NavItems from './NavItems/NavItems';\n\nimport './NavBar.scss';\n\nconst NavBar: FC = () => {\n\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"container\">\n                <div className=\"navbar-brand logo-container\">\n                    <AnimatedLogo />\n                </div>\n\n                <div className=\"navbar-menu\">\n                    <NavItems />\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;","import React, { FC } from 'react';\nimport Scroll from 'react-scroll';\n\nimport './ScrollToTop.scss';\nconst ScrollLink = Scroll.Link;\n\nconst Splash: FC = () => {\n    return (\n        <ScrollLink \n            to=\"splash\" \n            spy={true} \n            smooth={true} \n            duration={500}\n            offset={-200}\n            className=\"button is-primary scroll-button\"\n        >\n            <i className=\"fas fa-arrow-up\"></i>\n        </ScrollLink>\n    );\n};\n\nexport default Splash;","import React, { FC } from 'react';\nimport Scroll from 'react-scroll';\n\nimport ResumePath from '../../assets/resume.pdf';\n\nimport './Splash.scss'\n\nconst ScrollLink = Scroll.Link;\n\n//TODO Animate Arrow and make clickable\nconst Splash: FC = () => {\n    return (\n        <section className=\"hero splash\">\n            <div className=\"hero-body body-container\">\n                <div className=\"container text-container\">\n                    <div className=\"selfie-container\" />\n                    <h1 className=\"title is-massive\">\n                        <span role=\"img\" aria-label=\"wave\">üëãüèΩ</span>\n                    </h1>\n                    <h1 className=\"title is-massive\">\n                        Hey, I'm Michael.\n                    </h1>\n                    <h1 className=\"subtitle\">\n                        I'm an engineering student at the University of Waterloo with a passion for quality software.\n                    </h1>\n                    <div className=\"buttons\">\n                        <a href={ResumePath} target=\"_blank\" rel=\"noopener noreferrer\" className=\"button\">\n                            View Resume\n                        </a>\n                        <ScrollLink \n                            to=\"contact-me\" \n                            spy={true} \n                            smooth={true} \n                            duration={500}\n                            offset={-200} \n                            className=\"button is-primary\"\n                        >\n                            Get in Touch&nbsp;<span role=\"img\" aria-label=\"wave\">üëãüèΩ</span>\n                        </ScrollLink>\n                    </div>\n                </div>\n            </div>\n            <ScrollLink\n                to=\"my-story\" \n                spy={true} \n                smooth={true} \n                duration={500} \n                className=\"container icon\"\n                offset={-200}\n            >\n                <i className=\"fas fa-arrow-down\"></i>\n            </ScrollLink>\n        </section>\n    );\n}\n\nexport default Splash;","import React, { FC } from 'react';\n\nconst AboutMe: FC = () => {\n    return (\n        <section className=\"container knowledge\">\n            <h1 className=\"title\">My Story</h1>\n            <div className=\"tile is-ancestor\">\n                <div className=\"tile is-parent\">\n                    <article className=\"tile is-child box\">\n                        Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\n\nThe standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.\n                    </article>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default AboutMe;","import React, { FC } from 'react';\n\nimport './Knowledge.scss';\n\nconst Knowledge: FC = () => {\n    const fs = {\n        languages: ['Typescript', 'Javascript', 'Python', 'SQL', 'Bash'],\n        technologies: ['React', 'Redux', 'Vue', 'Vuex', 'Apollo GraphQL', 'Node.js', 'Express.js', 'PostgreSQL', 'Firebase', 'JEST', 'Docker'],\n    }\n    const ml = {\n        languages: ['Python', 'Go', 'Scala'],\n        technologies: ['TensorFlow', 'scikit-learn', 'numpy', 'Hadoop', 'Apache Spark']\n    }\n    return (\n        <section className=\"container knowledge\">\n            <h1 className=\"title\">Expertise</h1>\n            <div className=\"tile is-ancestor\">\n                <div className=\"tile is-parent\">\n                    <article className=\"tile is-child box\">\n                        <div className=\"discipline-icon\">\n                            <i className=\"fas fa-database\"></i>\n                        </div>\n                        <h3 className=\"title is-4 discipline-title\">Full Stack Development</h3>\n                        <h3 className=\"title is-5\">Languages</h3>\n                        <div className=\"tags are-medium\">\n                            { fs.languages.map(language => (\n                                <span className=\"tag\">\n                                    {language}\n                                </span>\n                            ))}\n                        </div>\n                        <h3 className=\"title is-5\">Technologies</h3>\n                        <div className=\"tags are-medium\">\n                            { fs.technologies.map(technology => (\n                                <span className=\"tag\">\n                                    {technology}\n                                </span>\n                            ))}\n                        </div>\n                    </article>\n                </div>\n                <div className=\"tile is-parent\">\n                    <article className=\"tile is-child box\">\n                        <div className=\"discipline-icon\">\n                            <i className=\"fas fa-robot\"></i>\n                        </div>\n                        <h3 className=\"title is-4 discipline-title\">Machine Learning</h3>\n                        <h3 className=\"title is-5\">Languages</h3>\n                        <div className=\"tags are-medium\">\n                            { ml.languages.map(language => (\n                                <span className=\"tag\">\n                                    {language}\n                                </span>\n                            ))}\n                        </div>\n                        <h3 className=\"title is-5\">Technologies</h3>\n                        <div className=\"tags are-medium\">\n                            { ml.technologies.map(technology => (\n                                <span className=\"tag\">\n                                    {technology}\n                                </span>\n                            ))}\n                        </div>\n                    </article>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Knowledge;","import React, { FC } from 'react';\n\nconst Experiences: FC = () => {\n    return (\n        <section className=\"container\">\n            <h1 className=\"title\">Past Experiences</h1>\n        </section>\n    );\n};\n\nexport default Experiences;","import React, { FC } from 'react';\n\nimport './ContactMe.scss';\n\nconst ContactMe: FC = () => {\n    return (\n        <section className=\"container contact-me\">\n            <h1 className=\"title\">Reach Out</h1>\n            <form \n                name=\"input\"\n                className=\"field\"\n                method=\"POST\"\n                action={'https://formspree.io/meqjzody'}\n            >\n                \n                <div className=\"field\">\n                    <label className=\"label\">Name</label>\n                    <div className=\"control\">\n                        <input className=\"input\" type=\"text\" name=\"Name\" placeholder=\"Your name...\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Email</label>\n                    <div className=\"control\">\n                        <input className=\"input\" type=\"email\" name=\"_replyto\" placeholder=\"Your email...\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Message</label>\n                    <div className=\"control\">\n                        <textarea name=\"message\" className=\"textarea\" placeholder=\"Type your message\"></textarea>\n                    </div>\n                </div>\n\n                <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                        <input className=\"button is-link\" type=\"submit\" value=\"Submit\" />\n                    </div>\n                </div>\n\n            </form>\n        </section>\n    );\n};\n\nexport default ContactMe;","import React, { FC } from 'react';\n\nimport './Footer.scss'\n\nconst Footer: FC = () => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"content has-text-centered\">\n                <p>\n                    Made with <span role=\"img\" aria-label=\"wave\">‚ù§Ô∏è</span>, from Michael.\n                </p>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;","import React, { Component, Fragment } from 'react';\nimport { Element } from 'react-scroll';\nimport './App.scss';\n\nimport NavBar from './NavBar/NavBar';\nimport ScrollToTop from './ScrollToTop/ScrollToTop';\nimport Splash from './Splash/Splash';\nimport AboutMe from './AboutMe/AboutMe';\nimport Knowledge from './Knowledge/Knowledge';\nimport Experiences from './Experiences/Experiences';\nimport ContactMe from './ContactMe/ContactMe';\nimport Footer from './Footer/Footer';\n\ninterface AppState {\n    hasScrolled: boolean\n}\n\nclass App extends Component<{}, AppState> {\n    state: AppState = {\n        hasScrolled: false\n    };\n\n    componentDidMount () {\n        document.addEventListener('scroll', this.checkScroll);\n    }\n\n    componentWillUnmount () {\n        document.removeEventListener('scroll', this.checkScroll);\n    }\n\n    checkScroll = () => {\n        if (window.scrollY > 0 && !this.state.hasScrolled) {\n            this.setState({ hasScrolled: true });\n        } else if (window.scrollY === 0 && this.state.hasScrolled) {\n            this.setState({ hasScrolled: false });\n        }\n    }\n\n    render () {\n        const { hasScrolled } = this.state;\n\n        return (\n            <Fragment>\n                <NavBar/>\n                <div className=\"body\">\n                    <Element id='splash' name='splash'>\n                        <Splash />\n                    </Element>\n                    <Element id='my-story' name='my-story'>\n                        <AboutMe />\n                    </Element>\n                    <Element id='expertise' name='expertise'>\n                        <Knowledge />\n                    </Element>\n                    <Element id='experiences' name='experiences'>\n                        <Experiences />\n                    </Element>\n                    <Element id='contact-me' name='contact-me'>\n                        <ContactMe />\n                    </Element>\n                    <Footer />\n                    { hasScrolled && <ScrollToTop /> }\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles.scss';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}