{"version":3,"sources":["logo.jpg","assets/resume.pdf","App/NavBar/AnimatedLogo/AnimatedLogo.tsx","App/NavBar/NavItems/NavItems.tsx","App/NavBar/NavBar.tsx","App/Splash/Splash.tsx","App/AboutMe/AboutMe.tsx","App/Knowledge/Knowledge.tsx","App/ContactMe/ContactMe.tsx","App/Footer/Footer.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AnimatedLogo","src","logo","className","alt","Component","NavItems","href","role","aria-label","NavBar","Splash","ResumePath","target","rel","AboutMe","Knowledge","fs","languages","technologies","ml","map","language","technology","ContactMe","name","method","action","type","placeholder","value","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.30f6e8f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2f67d006.jpg\";","module.exports = __webpack_public_path__ + \"static/media/resume.fe5e6b8d.pdf\";","import React, { Component } from 'react';\nimport './AnimatedLogo.scss'\n\nimport logo from '../../../logo.jpg';\n\nclass AnimatedLogo extends Component {\n    render () {\n        return (\n            <div>\n                <img src={logo} className=\"logo\" alt=\"logo\" />\n            </div>\n        );\n    }\n}\n\nexport default AnimatedLogo;","import React, { FC } from 'react';\nimport './NavItems.scss';\n\nconst NavItems: FC = () => {\n    return (\n        <div className=\"navbar-end nav-items\">\n            <a className=\"navbar-item\" href=\"/#\">\n                Knowledge\n            </a>\n            <a className=\"navbar-item\" href=\"/#\">\n                Experiences\n            </a>\n            <div className=\"navbar-item contact-button button is-primary\">\n                Say Hello &nbsp;<span role=\"img\" aria-label=\"wave\">üëãüèΩ</span>\n            </div>\n        </div>\n    )\n};\n\nexport default NavItems;","import React, { FC } from 'react';\n\nimport AnimatedLogo from './AnimatedLogo/AnimatedLogo';\nimport NavItems from './NavItems/NavItems';\n\nimport './NavBar.scss';\n\nconst NavBar: FC = () => {\n\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"container\">\n                <div className=\"navbar-brand\">\n                    <AnimatedLogo />\n                </div>\n\n                <div className=\"navbar-menu\">\n                    <NavItems />\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;","import React, { FC } from 'react';\nimport NavBar from '../NavBar/NavBar';\n\nimport ResumePath from '../../assets/resume.pdf';\n\nimport './Splash.scss'\n\n//TODO Animate Arrow and make clickable\nconst Splash: FC = () => {\n    return (\n        <section className=\"hero splash\">\n            <NavBar />\n            <div className=\"hero-body body-container\">\n                <div className=\"container text-container\">\n                    <h1 className=\"title is-massive\">\n                        <span role=\"img\" aria-label=\"wave\">üëãüèΩ</span>\n                    </h1>\n                    <h1 className=\"title is-massive\">\n                        Hey, I'm Michael.\n                    </h1>\n                    <h1 className=\"subtitle\">\n                        I'm an engineering student at the University of Waterloo with a passion for quality software.\n                    </h1>\n                    <div className=\"buttons\">\n                        <a href={ResumePath} target=\"_blank\" rel=\"noopener noreferrer\" className=\"button\">\n                            View Resume\n                        </a>\n                        <div className=\"button is-primary\">\n                            Contact Me\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container icon\">\n                <i className=\"fas fa-arrow-down\"></i>\n            </div>\n        </section>\n    );\n}\n\nexport default Splash;","import React, { FC } from 'react';\n\nconst AboutMe: FC = () => {\n    return (\n        <section className=\"hero is-dark\">\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    Hello\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default AboutMe;","import React, { FC } from 'react';\n\nimport './Knowledge.scss';\n\nconst Knowledge: FC = () => {\n    const fs = {\n        languages: ['Typescript', 'Javascript', 'Python', 'SQL', 'Bash'],\n        technologies: ['React', 'Redux', 'Vue', 'Vuex', 'Apollo GraphQL', 'Node.js', 'Express.js', 'PostgreSQL', 'Firebase', 'JEST', 'Docker'],\n    }\n    const ml = {\n        languages: ['Python', 'Go', 'Scala'],\n        technologies: ['TensorFlow', 'scikit-learn', 'numpy', 'Hadoop', 'Apache Spark']\n    }\n    return (\n        <section className=\"container knowledge\">\n            <h1 className=\"title\">Interests</h1>\n            <div className=\"tile is-ancestor\">\n                <div className=\"tile is-parent\">\n                    <article className=\"tile is-child box\">\n                        <div className=\"discipline-icon\">\n                            <i className=\"fas fa-database\"></i>\n                        </div>\n                        <h3 className=\"title is-4 discipline-title\">Full Stack Development</h3>\n                        <h3 className=\"title is-5\">Languages</h3>\n                        <div className=\"tags are-medium\">\n                            { fs.languages.map(language => (\n                                <span className=\"tag\">\n                                    {language}\n                                </span>\n                            ))}\n                        </div>\n                        <h3 className=\"title is-5\">Technologies</h3>\n                        <div className=\"tags are-medium\">\n                            { fs.technologies.map(technology => (\n                                <span className=\"tag\">\n                                    {technology}\n                                </span>\n                            ))}\n                        </div>\n                    </article>\n                </div>\n                <div className=\"tile is-parent\">\n                    <article className=\"tile is-child box\">\n                        <div className=\"discipline-icon\">\n                            <i className=\"fas fa-robot\"></i>\n                        </div>\n                        <h3 className=\"title is-4 discipline-title\">Machine Learning</h3>\n                        <h3 className=\"title is-5\">Languages</h3>\n                        <div className=\"tags are-medium\">\n                            { ml.languages.map(language => (\n                                <span className=\"tag\">\n                                    {language}\n                                </span>\n                            ))}\n                        </div>\n                        <h3 className=\"title is-5\">Technologies</h3>\n                        <div className=\"tags are-medium\">\n                            { ml.technologies.map(technology => (\n                                <span className=\"tag\">\n                                    {technology}\n                                </span>\n                            ))}\n                        </div>\n                    </article>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Knowledge;","import React, { FC } from 'react';\n\nimport './ContactMe.scss';\n\nconst ContactMe: FC = () => {\n    return (\n        <section className=\"container contact-me\">\n            <h1 className=\"title\">Contact Me</h1>\n            <form \n                name=\"input\"\n                className=\"field\"\n                method=\"POST\"\n                action={'https://formspree.io/meqjzody'}\n            >\n                \n                <div className=\"field\">\n                    <label className=\"label\">Name</label>\n                    <div className=\"control\">\n                        <input className=\"input\" type=\"text\" name=\"Name\" placeholder=\"Your name...\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Email</label>\n                    <div className=\"control\">\n                        <input className=\"input\" type=\"email\" name=\"_replyto\" placeholder=\"Your email...\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Message</label>\n                    <div className=\"control\">\n                        <textarea name=\"message\" className=\"textarea\" placeholder=\"Type your message\"></textarea>\n                    </div>\n                </div>\n\n                <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                        <input className=\"button is-link\" type=\"submit\" value=\"Submit\" />\n                    </div>\n                </div>\n\n            </form>\n        </section>\n    );\n};\n\nexport default ContactMe;","import React, { FC } from 'react';\n\nimport './Footer.scss'\n\nconst Footer: FC = () => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"content has-text-centered\">\n                <p>\n                    Made with <span role=\"img\" aria-label=\"wave\">‚ù§Ô∏è</span>, from Michael.\n                </p>\n            </div>\n        </footer>\n\n    );\n};\n\nexport default Footer;","import React, { FC } from 'react';\nimport './App.scss';\n\nimport Splash from './Splash/Splash';\nimport AboutMe from './AboutMe/AboutMe';\nimport Knowledge from './Knowledge/Knowledge';\n// import Experiences from './Experiences/Experiences';\nimport ContactMe from './ContactMe/ContactMe';\nimport Footer from './Footer/Footer';\n\nconst App: FC = () => {\n    return (\n        <div className=\"App\">\n            <Splash />\n            <AboutMe />\n            <Knowledge />\n            {/* <Experiences /> */}\n            <ContactMe /> \n            <Footer />\n           \n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles.scss';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}